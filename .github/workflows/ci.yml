name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Generate cache key
      id: cache-key
      run: echo "key=bun-${{ hashFiles('bun.lock') }}" >> $GITHUB_OUTPUT
        
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ steps.cache-key.outputs.key }}
        
    - name: Install dependencies
      run: bun install --frozen-lockfile

  lint-and-typecheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Restore node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ needs.setup.outputs.cache-key }}
      
    - name: Run linter
      run: bun run lint
      
    - name: Run type check
      run: bun run typecheck

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Restore node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ needs.setup.outputs.cache-key }}
      
    - name: Run unit tests
      run: bun test tests/*.test.ts
      
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Restore node modules
      uses: actions/cache@v4
      with:
        path: node_modules  
        key: ${{ needs.setup.outputs.cache-key }}
      
    - name: Build project
      run: bun run build

  integration-tests:
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Restore node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ needs.setup.outputs.cache-key }}
      
    - name: Run integration tests
      run: bun test tests/integration/
      env:
        NEAR_PRIVATE_KEY: ${{ secrets.NEAR_PRIVATE_KEY }}